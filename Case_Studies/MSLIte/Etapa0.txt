@ProjectName
MsLite complete

@Requirement=REQ-1
The User selects a field object from a hierarchy in the object browser, Then the System displays the properties to which the user has read access of the selected field object in the Work Area, after that the System verifies user has write access to property and enables “Issue Command” button for those properties for which the user has write access.The User selects the “Issue command” button, then the System prompts the user for the new value of the property, the User inputs a new value, the User confirms the command by selecting the “Send Command” button, the System transmits the command to the FSS, then the System indicates the command was sent but no confirmation was received yet, after that the FSS Sends a COV notification, confirming the success of the command, then the System displays the new property value in the Work Area. 

@Requirement=REQ-2
The FSS sends notification of Change of Value for an object property, then the System updates the property value in its internal object model, after that  The System updates the UI to reflect the new value of the property. 

@Requirement=REQ-3
The System receives a COV event and positively evaluates condition of at least one Logical condition, after the command that is configured in the reaction of the logical condition that evaluated to true will be executed, the order of execution of the rules is determined by their order in the "Configure Logic & Reaction". For each logical condition evaluated to a "true" value, the system executes all steps of the main success scenario. The order of execution of the rules is determined by their order in the "Configure Logic & Reaction" screen.

@Requirement=REQ-4
The System receives a COV event and positively evaluates condition of at least one Alarm rule, after the System persists the alarm and all its attributes in the system database and the System displays a new alarm line with the status “Not Ack.” at the top of the Alarm Viewer for all logged in users with read access to the associated alarm property. Then the System displays “Alarm Acknowledgment Request” dialog for all logged in users with read access to the associated alarm property. For each alarm rule evaluated to a "true" value, the system executes all steps of the main success scenario. The order of execution of the rules is determined by their order in the "Configure Alarm Rules" 

@Requirement=REQ-5
The User acknowledges the alarm by selecting the “Acknowledge Alarm” button in the Acknowledge Alarm Request dialog box, after The System updates the state of the alarm in the system database, the System closes the “Alarm Acknowledgment Request” dialog for all users seeing it, the System changes the status of the alarm to “Ack” in the Alarm Viewer for all users seeing it, the System assigns the user who acknowledged the alarm as the owner of the alarm and will update the database. 

@Requirement=REQ-6
The User dismisses the alarm by selecting the action icon for the specific alarm in the AlarmDisplay, then the User selects the Dismiss Alarm Option from the popup window, after that the System verifies the alarm is acknowledged, the System verifies user is the owner of the acknowledged alarm, the System closes the “Alarm Dismissal Request” dialog, the System deletes the alarm from the system database, the System removes the alarm from the Alarm List for all users seeing it.

@Requirement=REQ-7
The Object Browser displays hierarchies (with parent logical nodes, children logical nodes and field objects for each logical node) that an authenticated User owns, All hierarchies are user specific and are persisted in the database, The User expands the first level of the hierarchy by selecting the “+” handle next to the hierarchy name, after the System displays the direct children of the expanded hierarchy and switches the “+” handle of the hierarchy name to a “-” handle, If a hierarchy is selected / highlighted by a user, then the system displays the hierarchy name and the hierarchy description in the Work Area. the User expands a logical node in the hierarchy by selecting the “+” handle next to the logical node name, If a logical node is selected / highlighted by a user, then the system displays the logical node name in the Work Area. The System displays the direct children of the expanded logical node and switches the “+” handle of the logical node to a “-” handle.  The User selects a field object from the children of the expanded node, after that the System verifies the access rights of the user to the properties of the selected field object, then the System displays the field object name and the field object properties to which the user has at least read access in the work area. The User collapses a logical node in the hierarchy by selecting the “-” handle next to the logical node name, ater that the System hides all children of the logical node and switches the “-” handle of the logical node name to an “+” handle. The User collapses a hierarchy by selecting the “-” handle next to the hierarchy name after the System hides all children of the hierarchy and switches the “-” handle of the hierarchy name to an “+” handle.  

@Requirement=REQ-8
The User selects the “Hierarchies” tab on the screen, after the System displays the “Configure Hierarchies” screen, afterwards the  User selects the “Create Hierarchy” button, then the System displays the “Create Hierarchy” screen, the User enters a hierarchy name, a hierarchy description. The User selectively instantiates one of the following extending use cases : Create Logical Node, or Delete Logical Node, or Rename Logical Node, or Add Field Object, or Remove Field Object. The User selects the “Create Hierarchy” button, the System verifies the hierarchy name is unique, after thatt the System persists the hierarchy information in the database, the System displays the “Configure Hierarchies” screen and displays the newly created hierarchy in the hierarchies list.

@Requirement=REQ-9
The User selects the “Configure Hierarchies” tab, then the System displays the “Configure Hierarchies” screen, after that the User selects a hierarchy from the hierarchy list, then the System displays the description of the hierarchy in the Hierarchy Description box. The User selects the “Edit Hierarchy” button, Then the System displays the “Edit Hierarchy” screen, after that the User may modify the hierarchy name or the hierarchy description. The User selectively instantiates one of the following extending use cases:  Create Logical Node, or  Delete Logical Node, or Rename Logical Node, or Add Field Object, or  Remove Field Object. After that the User selects the “Save Hierarchy” button, then the System verifies the hierarchy name is unique, the System verifies the hierarchy is not being edited by the same user in a different session, the System persists the hierarchy information in the MSLite database, and the System displays the “Configure Hierarchies” screen and displays the edited hierarchy with its edited name/description/logical nodes/field objects in the hierarchies list.

@Requirement=REQ-10
The User selects the “Hierarchies” tab, then the System displays the “Configure Hierarchies” screen, aftr that the User selects a hierarchy from the hierarchy list, then the User selects the “Delete Hierarchy” button, the System displays a hierarchy deletion confirmation dialog, after the User confirms the deletion of the hierarchy after that the System verifies the hierarchy is not being edited by the same user in a different session, If a hierarchy is deleted all its child logical nodes and / or field objects will be deleted as well, the System displays the “Configure Hierarchies” screen. The deleted hierarchy name is not displayed in the hierarchies list.

@Requirement=REQ-11
The User selects the “Configure Hierarchies” tab, then the System displays the “Configure Hierarchies” screenand the User selects a hierarchy from the hierarchy list, the System displays the description of the hierarchy in the Hierarchy Description box, the User selects the “Edit Hierarchy” button, after that the System verifies the hierarchy is not being edited by the same user in a different session, the System displays the “Edit Hierarchy” screen and the User sets a logical node “Insertion point” by selecting an item in the “Hierarchy Tree Editor”, the User selects the “Add Node” Button  then the System verifies the “Insertion point” is either a hierarchy’s root element or a logical node, the System prompts the user for the name of the logical node to create, after that the User enters a name for the Logical node, the System verifies no other logical node with the same name exists at the selected insertion point, the System creates a logical node as a child of the insertion point.

@Requirement=REQ-12
The User selects the “Configure Hierarchies” tab, then the System displays the “Configure Hierarchies” screen, the User selects a hierarchy from the hierarchy list, and then the System displays the description of the hierarchy in the Hierarchy Description box, after the User selects the “Edit Hierarchy” button, then the System displays the “Edit Hierarchy” screen. After that the User selects a logical node from the “Hierarchy Tree Editor", the User selects the “Delete Node” button, then the System displays a confirmation dialog mentioning that all children of the logical node will be removed from the hierarchy, If the User confirms the deletion of the logical node, the System verifies the hierarchy is not being edited by the same user in a different session, the System removes the logical node and its children from the “Hierarchy Tree Editor”. If a logical node is deleted all its child logical nodes and / or field objects will be deleted as well. 

@Requirement=REQ-13
The User selects the “Configure Hierarchies” tab, then System displays the “Configure Hierarchies” screen, the User selects a hierarchy from the hierarchy list, after that the System displays the description of the hierarchy in the Hierarchy Description box, then the User selects the “Edit Hierarchy” button, after that the System displays the “Edit Hierarchy” screen and the User selects a field object from the “Field object list”, the User sets an “Insertion point” by selecting an item in the “Hierarchy Tree Editor”. If the User selects the “Add Object as node” button, then the System verifies the destination insertion point is either a hierarchy’s root element or a logical node, the System verifies that the field object is not already present at the selected insertion point, the System verifies the user has read access to at least one property of the field object, the System verified that the user is not editing the hierarchy in another session, the System adds the selected field object as a child node of the destination insertion point, the System keeps the added field object available in the “Field object list” for possible other insertions.  

@Requirement=REQ-14
The User selects the “Configure Hierarchies” tab, then the System displays the “Configure Hierarchies” screen, after that the User selects a hierarchy from the hierarchy list, then the System displays the description of the hierarchy in the Hierarchy Description box. The User selects the “Edit Hierarchy” button, then the System displays the “Edit Hierarchy” screen, the User selects a field object from the “Hierarchy Tree Editor”, the User selects the “Remove Node” button, the System verified that the user is not editing the hierarchy in another session, the System removes the selected Field Object from the hierarchy.  

@Requirement=REQ-15
The User selects the “L&R” tab, then the System displays the “Logic and Reaction Configuration” screen, after that the User selects the “Create L&R Rule” button, the System displays the “Create L&R Rule” screen, then the User enters the name of the L&R Rule to be created, the User configures the “Logical Condition” part of the rule by configuring individual conditions, the User configures an individual condition as follows: the User selects an object from the object list then the System displays only the properties of the selected object in the properties list that the user has read access to, the User selects a property from the properties list. The User selects type of condition which can be one of the following: “Is Equal to” and adds a Numeric Value, or “Is Not Equal to” and adds a Numeric Value, or “Is greater than”  and adds a Numeric Value, or “Is less than”  and adds a Numeric Value, or "Is True”, or “Is False” , after that the System enables or disables condition value(s), depending on the condition type chosen, the User optionally enters a condition value.The User configures the “Reaction” part of the rule: The User selects an object from the object list, then the System displays the properties of the selected object in the properties list, the User selects a property from the properties list then the System verifies user has write access to the property, after that the User enters the value of the command to be issued, then Based on the type of value that the property can take, the system verifies the validity of the input. The User completes the creation of the rule by selecting the “Create Rule” button, after that the System verifies the correctness of rule parameters, the System creates a new rule with the specified parameters and persists it in the database and in the cache for performance, the System displays the “Logic and Reaction Configuration” screen, with the new rule added to the L&R Rule list.

@Requirement=REQ-16
The User selects the “L&R” tab, then the System displays the “Logic and Reaction Configuration” screen, then the User selects a rule from “L&R Rules” list, the User selects the “Edit L&R Rule” button, after that the System Verifies user has read access to all properties in the logical condition of the rule and write access to the property affected by its reaction, Only then can the user edit the L&R rule. The System displays the “Edit L&R Rule” screen, after that the User may modify the name of the L&R rule, the user may modify the “Logical Condition” part of the rule by modifying individual conditions, the User may modify the “Reaction” part of the rule”. After that the User completes the edition of the rule by selecting the “Save Rule” button, The System verifies the correctness of rule parameters, the System verifies the selected rule is not being edited by another user or by the current user in another session, the System displays the “Logic and Reaction Configuration” screen, with the updated rule name in the L&R Rule list.

@Requirement=REQ-17
The User selects the “L&R” tab, the System displays the “Logic and Reaction Configuration” screenthe the User selects a rule from “L&R Rules” list, the User selects the “Delete L&R Rule” button, after that the System verifies user has read access to all properties that are a part of the condition and write access to the property affected by reaction of the rule, Only then can the user edit the L&R rule. Then the System displays the “Rule deletion confirmation” dialog, after that the User confirms the deletion of the rule by selecting the “Delete” button, The System verifies the selected rule is not being edited by another user or by the current user in another session, the System removes the deleted rule from its set of persisted rules, the System displays the “Logic and Reaction Configuration” screen, then The deleted rule name is not displayed in the L&R Rule list.

@Requirement=REQ-18
The User selects the “Alarms” tab, then the System displays the “Configure Alarm Rules” screen, then the User selects the “Create Alarm Rule” button, then the System displays the “Create Alarm Rule” screen, after that the User enters the name of Alarm Rule to be created, the User enters the name of Alarm to be generated, the User configures the “Alarm Condition” part of the alarm rule by configuring individual conditions, the User configures an individual condition as follows: the User selects an object from the object list, and thenn the System displays only the properties of the selected object in the properties list that the user has read access to, then the User selects a property from the properties list. The User selects type of condition which can be one of the following: “Is Equal to” and adds a Numeric Value, or “Is Not Equal to” and adds a Numeric Value, or “Is greater than”  and adds a Numeric Value, or “Is less than”  and adds a Numeric Value, or "Is True”, or “Is False", then the System enables or disables condition value(s), depending on the condition type chosen.  The User optionally enters a condition value. the  User combines individual conditions with Boolean operators and parentheses, the User selects the “Associated Alarm Property” dropdown list, the  User completes the creation of the rule by selecting the “Create Rule” button, The System verifies the correctness of rule parameters, then the System verifies that there are no other Alarm rules and Alarm Names with the same name as specified, the System creates a new alarm rule with the specified parameters and persists it in the database and in the cache for performance, the System displays the “Configure Alarm Rules” screen, with the new rule added to the Alarm Rules list.

@Requirement=REQ-19
The User selects the “Alarms” tab, then the System displays the “Configure Alarm Rules” screen, then the User selects a rule from “Alarm Rules” list. The User selects the “Edit Alarm Rule” button, after that the System Verifies user has read access to all properties in the Alarm condition of the rule and write access to the associated alarm property, the System displays the “Edit Alarm Rule” screen, the User may modify the name of the Alarm Rule, or  the User may modify the “Alarm Condition” part of the rule by modifying individual conditions or the User may modify the “Alarm” (or reaction) part of the rule. The User completes editing the rule by selecting the “Save Rule” button, the System verifies the correctness of rule parameters, the System verifies the selected rule is not being edited by another user or by the current user in another session, the System displays the “Configure Alarm Rules” screen, with the updated rule name in the Alarm Rule list.

@Requirement=REQ-20
The User selects the “Alarms” tab, then the System displays the “Configure Alarm Rules” screen, then the User selects a rule from “Alarm Rules” list. The User selects the “Delete Alarm Rule” button the System verifies user has read access to all properties that are a part of the condition and write access to the associated alarm property, Only then can the user edit the Alarm rule. The System displays the “Rule deletion confirmation” dialog, the User confirms the deletion of the rule by selecting the “Delete” button, then the System verifies the selected rule is not being edited by another user or by the current user in another session, then the System removes the deleted rule from its set of persisted rules. the System displays the “Configure Alarm Rules” screen, The deleted rule name is not displayed in the Alarm Rules list.

@Requirement=REQ-21
The User browses to MSLite system web page, then the System presents a screen containing username and password fields, after that the User enters his/her username and password, then the System validates username and password through. After that, the  System browses the user to the desired page.